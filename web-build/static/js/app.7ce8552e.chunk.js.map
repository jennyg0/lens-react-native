{"version":3,"sources":["CreatePoll.js","VoteOnPoll.js","App.js"],"names":["styles","StyleSheet","create","input","height","margin","borderWidth","padding","CreatePollComponent","navigation","useState","text","onChangeText","textOption1","onChangeTextOption1","textOption2","onChangeTextOption2","SafeAreaView","Text","TextInput","style","value","placeholder","Button","onPress","navigate","name","optionOne","optionTwo","title","color","accessibilityLabel","VoteOnPollComponent","route","optionOneCount","setOptionOneCount","optionTwoCount","setOptionTwoCount","params","Stack","createNativeStackNavigator","App","environment","NavigationContainer","Navigator","Screen","component","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"6OAuDMA,EAASC,UAAWC,OAAO,CAC/BC,MAAO,CACLC,OAAQ,GACRC,OAAQ,GACRC,YAAa,EACbC,QAAS,MAIEC,EAvDa,SAAH,GAAwB,IAAlBC,EAAU,EAAVA,WAC7B,EAA6BC,mBAAS,IAAG,WAAlCC,EAAI,KAAEC,EAAY,KACzB,EAA2CF,mBAAS,IAAG,WAAhDG,EAAW,KAAEC,EAAmB,KACvC,EAA2CJ,mBAAS,IAAG,WAAhDK,EAAW,KAAEC,EAAmB,KAMvC,OACE,eAACC,EAAA,QAAY,WACX,cAACC,EAAA,QAAI,UAAC,kBACN,cAACC,EAAA,QAAS,CACRC,MAAOpB,EAAOG,MACdS,aAAcA,EACdS,MAAOV,EACPW,YAAY,iBAEd,cAACH,EAAA,QAAS,CACRC,MAAOpB,EAAOG,MACdS,aAAcE,EACdO,MAAOR,EACPS,YAAY,aAEd,cAACH,EAAA,QAAS,CACRC,MAAOpB,EAAOG,MACdS,aAAcI,EACdK,MAAON,EACPO,YAAY,aAEd,cAACC,EAAA,QAAM,CACLC,QAAS,kBACPf,EAAWgB,SAAS,OAAQ,CAC1BC,KAAMf,EACNgB,UAAWd,EACXe,UAAWb,KAGfc,MAAM,SACNC,MAAM,UACNC,mBAAmB,uCCxCZ,SAASC,EAAoB,GAAwB,IAAtBC,EAAK,EAALA,MAC5C,GAD6D,EAAVxB,WACPC,mBAAS,IAAE,WAAhDwB,EAAc,KAAEC,EAAiB,KACxC,EAA4CzB,mBAAS,GAAE,WAAhD0B,EAAc,KAAEC,EAAiB,KACxC,EAAuCJ,EAAMK,OAArCZ,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAEzB,OACE,eAACX,EAAA,QAAY,WACX,cAACC,EAAA,QAAI,UAAEQ,IACP,cAACH,EAAA,QAAM,CACLC,QAAS,kBACPW,GAAkB,SAACD,GAAc,OAAKA,EAAiB,MAEzDL,MAAOF,EACPG,MAAM,YAGR,eAACZ,EAAA,QAAI,WAAC,UAAQgB,KACd,cAACX,EAAA,QAAM,CACLC,QAAS,kBACPa,GAAkB,SAACD,GAAc,OAAKA,EAAiB,MAEzDP,MAAOD,EACPE,MAAM,YAGR,eAACZ,EAAA,QAAI,WAAC,UAAQkB,QCtBpB,IAAMG,EAAQC,oBAEC,SAASC,IACtB,OACE,cAAC,eAAY,CAACC,YAAY,UAAS,SACjC,cAACC,EAAA,QAAmB,UAClB,eAACJ,EAAMK,UAAS,WACd,cAACL,EAAMM,OAAM,CAACnB,KAAK,OAAOoB,UAAWtC,IACrC,cAAC+B,EAAMM,OAAM,CAACnB,KAAK,OAAOoB,UAAWd,WAWhC/B,UAAWC,OAAO,CAC/B6C,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,a","file":"static/js/app.7ce8552e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n} from \"react-native\";\n\nconst CreatePollComponent = ({ navigation }) => {\n  const [text, onChangeText] = useState(\"\");\n  const [textOption1, onChangeTextOption1] = useState(\"\");\n  const [textOption2, onChangeTextOption2] = useState(\"\");\n\n  // const onPressCreatePoll = () => {\n  //   navigation.navigate(\"Vote\");\n  // };\n\n  return (\n    <SafeAreaView>\n      <Text>Create a Poll</Text>\n      <TextInput\n        style={styles.input}\n        onChangeText={onChangeText}\n        value={text}\n        placeholder=\"name of poll\"\n      />\n      <TextInput\n        style={styles.input}\n        onChangeText={onChangeTextOption1}\n        value={textOption1}\n        placeholder=\"option 1\"\n      />\n      <TextInput\n        style={styles.input}\n        onChangeText={onChangeTextOption2}\n        value={textOption2}\n        placeholder=\"option 2\"\n      />\n      <Button\n        onPress={() =>\n          navigation.navigate(\"Vote\", {\n            name: text,\n            optionOne: textOption1,\n            optionTwo: textOption2,\n          })\n        }\n        title=\"Create\"\n        color=\"#841584\"\n        accessibilityLabel=\"Create a poll with this button\"\n      ></Button>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n});\n\nexport default CreatePollComponent;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n} from \"react-native\";\n\nexport default function VoteOnPollComponent({ route, navigation }) {\n  const [optionOneCount, setOptionOneCount] = useState(0);\n  const [optionTwoCount, setOptionTwoCount] = useState(0);\n  const { name, optionOne, optionTwo } = route.params;\n\n  return (\n    <SafeAreaView>\n      <Text>{name}</Text>\n      <Button\n        onPress={() =>\n          setOptionOneCount((optionOneCount) => optionOneCount + 1)\n        }\n        title={optionOne}\n        color=\"#841584\"\n        //accessibilityLabel={`Vote for ${Option1}`}\n      ></Button>\n      <Text>Votes: {optionOneCount}</Text>\n      <Button\n        onPress={() =>\n          setOptionTwoCount((optionTwoCount) => optionTwoCount + 1)\n        }\n        title={optionTwo}\n        color=\"#841584\"\n        //accessibilityLabel={`Vote for ${Option2}`}\n      ></Button>\n      <Text>Votes: {optionTwoCount}</Text>\n    </SafeAreaView>\n  );\n}\n","import { StyleSheet } from \"react-native\";\nimport { NavigationContainer, DarkTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { LensProvider } from \"@lens-protocol/react-native-lens-ui-kit\";\n\nimport ProfileComponent from \"./Profiles\";\nimport ViewProfile from \"./ViewProfile\";\nimport ViewComments from \"./ViewComments\";\nimport ViewFollowing from \"./ViewFollowing\";\nimport CreatePollComponent from \"./CreatePoll\";\nimport VoteOnPollComponent from \"./VoteOnPoll\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <LensProvider environment=\"testnet\">\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={CreatePollComponent} />\n          <Stack.Screen name=\"Vote\" component={VoteOnPollComponent} />\n          {/* <Stack.Screen name=\"Home\" component={ProfileComponent} />\n          <Stack.Screen name=\"Profile\" component={ViewProfile} />\n          <Stack.Screen name=\"Comments\" component={ViewComments} />\n          <Stack.Screen name=\"Following\" component={ViewFollowing} /> */}\n        </Stack.Navigator>\n      </NavigationContainer>\n    </LensProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}